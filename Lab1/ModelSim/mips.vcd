$date
	Sun Feb 06 17:05:50 2022
$end
$version
	ModelSim Version 10.5b
$end
$timescale
	1ps
$end

$scope module mips_tb $end
$var reg 1 ! clock $end
$var reg 1 " reset $end
$var integer 32 # i $end

$scope module mips $end
$var wire 1 $ clock $end
$var wire 1 % reset $end
$var wire 1 & instruction [31] $end
$var wire 1 ' instruction [30] $end
$var wire 1 ( instruction [29] $end
$var wire 1 ) instruction [28] $end
$var wire 1 * instruction [27] $end
$var wire 1 + instruction [26] $end
$var wire 1 , instruction [25] $end
$var wire 1 - instruction [24] $end
$var wire 1 . instruction [23] $end
$var wire 1 / instruction [22] $end
$var wire 1 0 instruction [21] $end
$var wire 1 1 instruction [20] $end
$var wire 1 2 instruction [19] $end
$var wire 1 3 instruction [18] $end
$var wire 1 4 instruction [17] $end
$var wire 1 5 instruction [16] $end
$var wire 1 6 instruction [15] $end
$var wire 1 7 instruction [14] $end
$var wire 1 8 instruction [13] $end
$var wire 1 9 instruction [12] $end
$var wire 1 : instruction [11] $end
$var wire 1 ; instruction [10] $end
$var wire 1 < instruction [9] $end
$var wire 1 = instruction [8] $end
$var wire 1 > instruction [7] $end
$var wire 1 ? instruction [6] $end
$var wire 1 @ instruction [5] $end
$var wire 1 A instruction [4] $end
$var wire 1 B instruction [3] $end
$var wire 1 C instruction [2] $end
$var wire 1 D instruction [1] $end
$var wire 1 E instruction [0] $end
$var wire 1 F pc4 [31] $end
$var wire 1 G pc4 [30] $end
$var wire 1 H pc4 [29] $end
$var wire 1 I pc4 [28] $end
$var wire 1 J pc4 [27] $end
$var wire 1 K pc4 [26] $end
$var wire 1 L pc4 [25] $end
$var wire 1 M pc4 [24] $end
$var wire 1 N pc4 [23] $end
$var wire 1 O pc4 [22] $end
$var wire 1 P pc4 [21] $end
$var wire 1 Q pc4 [20] $end
$var wire 1 R pc4 [19] $end
$var wire 1 S pc4 [18] $end
$var wire 1 T pc4 [17] $end
$var wire 1 U pc4 [16] $end
$var wire 1 V pc4 [15] $end
$var wire 1 W pc4 [14] $end
$var wire 1 X pc4 [13] $end
$var wire 1 Y pc4 [12] $end
$var wire 1 Z pc4 [11] $end
$var wire 1 [ pc4 [10] $end
$var wire 1 \ pc4 [9] $end
$var wire 1 ] pc4 [8] $end
$var wire 1 ^ pc4 [7] $end
$var wire 1 _ pc4 [6] $end
$var wire 1 ` pc4 [5] $end
$var wire 1 a pc4 [4] $end
$var wire 1 b pc4 [3] $end
$var wire 1 c pc4 [2] $end
$var wire 1 d pc4 [1] $end
$var wire 1 e pc4 [0] $end
$var wire 1 f aluop [1] $end
$var wire 1 g aluop [0] $end
$var wire 1 h register_rs [31] $end
$var wire 1 i register_rs [30] $end
$var wire 1 j register_rs [29] $end
$var wire 1 k register_rs [28] $end
$var wire 1 l register_rs [27] $end
$var wire 1 m register_rs [26] $end
$var wire 1 n register_rs [25] $end
$var wire 1 o register_rs [24] $end
$var wire 1 p register_rs [23] $end
$var wire 1 q register_rs [22] $end
$var wire 1 r register_rs [21] $end
$var wire 1 s register_rs [20] $end
$var wire 1 t register_rs [19] $end
$var wire 1 u register_rs [18] $end
$var wire 1 v register_rs [17] $end
$var wire 1 w register_rs [16] $end
$var wire 1 x register_rs [15] $end
$var wire 1 y register_rs [14] $end
$var wire 1 z register_rs [13] $end
$var wire 1 { register_rs [12] $end
$var wire 1 | register_rs [11] $end
$var wire 1 } register_rs [10] $end
$var wire 1 ~ register_rs [9] $end
$var wire 1 !! register_rs [8] $end
$var wire 1 "! register_rs [7] $end
$var wire 1 #! register_rs [6] $end
$var wire 1 $! register_rs [5] $end
$var wire 1 %! register_rs [4] $end
$var wire 1 &! register_rs [3] $end
$var wire 1 '! register_rs [2] $end
$var wire 1 (! register_rs [1] $end
$var wire 1 )! register_rs [0] $end
$var wire 1 *! register_rt [31] $end
$var wire 1 +! register_rt [30] $end
$var wire 1 ,! register_rt [29] $end
$var wire 1 -! register_rt [28] $end
$var wire 1 .! register_rt [27] $end
$var wire 1 /! register_rt [26] $end
$var wire 1 0! register_rt [25] $end
$var wire 1 1! register_rt [24] $end
$var wire 1 2! register_rt [23] $end
$var wire 1 3! register_rt [22] $end
$var wire 1 4! register_rt [21] $end
$var wire 1 5! register_rt [20] $end
$var wire 1 6! register_rt [19] $end
$var wire 1 7! register_rt [18] $end
$var wire 1 8! register_rt [17] $end
$var wire 1 9! register_rt [16] $end
$var wire 1 :! register_rt [15] $end
$var wire 1 ;! register_rt [14] $end
$var wire 1 <! register_rt [13] $end
$var wire 1 =! register_rt [12] $end
$var wire 1 >! register_rt [11] $end
$var wire 1 ?! register_rt [10] $end
$var wire 1 @! register_rt [9] $end
$var wire 1 A! register_rt [8] $end
$var wire 1 B! register_rt [7] $end
$var wire 1 C! register_rt [6] $end
$var wire 1 D! register_rt [5] $end
$var wire 1 E! register_rt [4] $end
$var wire 1 F! register_rt [3] $end
$var wire 1 G! register_rt [2] $end
$var wire 1 H! register_rt [1] $end
$var wire 1 I! register_rt [0] $end
$var wire 1 J! sign_extend [31] $end
$var wire 1 K! sign_extend [30] $end
$var wire 1 L! sign_extend [29] $end
$var wire 1 M! sign_extend [28] $end
$var wire 1 N! sign_extend [27] $end
$var wire 1 O! sign_extend [26] $end
$var wire 1 P! sign_extend [25] $end
$var wire 1 Q! sign_extend [24] $end
$var wire 1 R! sign_extend [23] $end
$var wire 1 S! sign_extend [22] $end
$var wire 1 T! sign_extend [21] $end
$var wire 1 U! sign_extend [20] $end
$var wire 1 V! sign_extend [19] $end
$var wire 1 W! sign_extend [18] $end
$var wire 1 X! sign_extend [17] $end
$var wire 1 Y! sign_extend [16] $end
$var wire 1 Z! sign_extend [15] $end
$var wire 1 [! sign_extend [14] $end
$var wire 1 \! sign_extend [13] $end
$var wire 1 ]! sign_extend [12] $end
$var wire 1 ^! sign_extend [11] $end
$var wire 1 _! sign_extend [10] $end
$var wire 1 `! sign_extend [9] $end
$var wire 1 a! sign_extend [8] $end
$var wire 1 b! sign_extend [7] $end
$var wire 1 c! sign_extend [6] $end
$var wire 1 d! sign_extend [5] $end
$var wire 1 e! sign_extend [4] $end
$var wire 1 f! sign_extend [3] $end
$var wire 1 g! sign_extend [2] $end
$var wire 1 h! sign_extend [1] $end
$var wire 1 i! sign_extend [0] $end
$var wire 1 j! unsign_extend [31] $end
$var wire 1 k! unsign_extend [30] $end
$var wire 1 l! unsign_extend [29] $end
$var wire 1 m! unsign_extend [28] $end
$var wire 1 n! unsign_extend [27] $end
$var wire 1 o! unsign_extend [26] $end
$var wire 1 p! unsign_extend [25] $end
$var wire 1 q! unsign_extend [24] $end
$var wire 1 r! unsign_extend [23] $end
$var wire 1 s! unsign_extend [22] $end
$var wire 1 t! unsign_extend [21] $end
$var wire 1 u! unsign_extend [20] $end
$var wire 1 v! unsign_extend [19] $end
$var wire 1 w! unsign_extend [18] $end
$var wire 1 x! unsign_extend [17] $end
$var wire 1 y! unsign_extend [16] $end
$var wire 1 z! unsign_extend [15] $end
$var wire 1 {! unsign_extend [14] $end
$var wire 1 |! unsign_extend [13] $end
$var wire 1 }! unsign_extend [12] $end
$var wire 1 ~! unsign_extend [11] $end
$var wire 1 !" unsign_extend [10] $end
$var wire 1 "" unsign_extend [9] $end
$var wire 1 #" unsign_extend [8] $end
$var wire 1 $" unsign_extend [7] $end
$var wire 1 %" unsign_extend [6] $end
$var wire 1 &" unsign_extend [5] $end
$var wire 1 '" unsign_extend [4] $end
$var wire 1 (" unsign_extend [3] $end
$var wire 1 )" unsign_extend [2] $end
$var wire 1 *" unsign_extend [1] $end
$var wire 1 +" unsign_extend [0] $end
$var wire 1 ," upper_immed [31] $end
$var wire 1 -" upper_immed [30] $end
$var wire 1 ." upper_immed [29] $end
$var wire 1 /" upper_immed [28] $end
$var wire 1 0" upper_immed [27] $end
$var wire 1 1" upper_immed [26] $end
$var wire 1 2" upper_immed [25] $end
$var wire 1 3" upper_immed [24] $end
$var wire 1 4" upper_immed [23] $end
$var wire 1 5" upper_immed [22] $end
$var wire 1 6" upper_immed [21] $end
$var wire 1 7" upper_immed [20] $end
$var wire 1 8" upper_immed [19] $end
$var wire 1 9" upper_immed [18] $end
$var wire 1 :" upper_immed [17] $end
$var wire 1 ;" upper_immed [16] $end
$var wire 1 <" upper_immed [15] $end
$var wire 1 =" upper_immed [14] $end
$var wire 1 >" upper_immed [13] $end
$var wire 1 ?" upper_immed [12] $end
$var wire 1 @" upper_immed [11] $end
$var wire 1 A" upper_immed [10] $end
$var wire 1 B" upper_immed [9] $end
$var wire 1 C" upper_immed [8] $end
$var wire 1 D" upper_immed [7] $end
$var wire 1 E" upper_immed [6] $end
$var wire 1 F" upper_immed [5] $end
$var wire 1 G" upper_immed [4] $end
$var wire 1 H" upper_immed [3] $end
$var wire 1 I" upper_immed [2] $end
$var wire 1 J" upper_immed [1] $end
$var wire 1 K" upper_immed [0] $end
$var wire 1 L" wreg_rd [4] $end
$var wire 1 M" wreg_rd [3] $end
$var wire 1 N" wreg_rd [2] $end
$var wire 1 O" wreg_rd [1] $end
$var wire 1 P" wreg_rd [0] $end
$var wire 1 Q" wreg_rt [4] $end
$var wire 1 R" wreg_rt [3] $end
$var wire 1 S" wreg_rt [2] $end
$var wire 1 T" wreg_rt [1] $end
$var wire 1 U" wreg_rt [0] $end
$var wire 1 V" immed [1] $end
$var wire 1 W" immed [0] $end
$var wire 1 X" alu_result [31] $end
$var wire 1 Y" alu_result [30] $end
$var wire 1 Z" alu_result [29] $end
$var wire 1 [" alu_result [28] $end
$var wire 1 \" alu_result [27] $end
$var wire 1 ]" alu_result [26] $end
$var wire 1 ^" alu_result [25] $end
$var wire 1 _" alu_result [24] $end
$var wire 1 `" alu_result [23] $end
$var wire 1 a" alu_result [22] $end
$var wire 1 b" alu_result [21] $end
$var wire 1 c" alu_result [20] $end
$var wire 1 d" alu_result [19] $end
$var wire 1 e" alu_result [18] $end
$var wire 1 f" alu_result [17] $end
$var wire 1 g" alu_result [16] $end
$var wire 1 h" alu_result [15] $end
$var wire 1 i" alu_result [14] $end
$var wire 1 j" alu_result [13] $end
$var wire 1 k" alu_result [12] $end
$var wire 1 l" alu_result [11] $end
$var wire 1 m" alu_result [10] $end
$var wire 1 n" alu_result [9] $end
$var wire 1 o" alu_result [8] $end
$var wire 1 p" alu_result [7] $end
$var wire 1 q" alu_result [6] $end
$var wire 1 r" alu_result [5] $end
$var wire 1 s" alu_result [4] $end
$var wire 1 t" alu_result [3] $end
$var wire 1 u" alu_result [2] $end
$var wire 1 v" alu_result [1] $end
$var wire 1 w" alu_result [0] $end
$var wire 1 x" branch_addr [31] $end
$var wire 1 y" branch_addr [30] $end
$var wire 1 z" branch_addr [29] $end
$var wire 1 {" branch_addr [28] $end
$var wire 1 |" branch_addr [27] $end
$var wire 1 }" branch_addr [26] $end
$var wire 1 ~" branch_addr [25] $end
$var wire 1 !# branch_addr [24] $end
$var wire 1 "# branch_addr [23] $end
$var wire 1 ## branch_addr [22] $end
$var wire 1 $# branch_addr [21] $end
$var wire 1 %# branch_addr [20] $end
$var wire 1 &# branch_addr [19] $end
$var wire 1 '# branch_addr [18] $end
$var wire 1 (# branch_addr [17] $end
$var wire 1 )# branch_addr [16] $end
$var wire 1 *# branch_addr [15] $end
$var wire 1 +# branch_addr [14] $end
$var wire 1 ,# branch_addr [13] $end
$var wire 1 -# branch_addr [12] $end
$var wire 1 .# branch_addr [11] $end
$var wire 1 /# branch_addr [10] $end
$var wire 1 0# branch_addr [9] $end
$var wire 1 1# branch_addr [8] $end
$var wire 1 2# branch_addr [7] $end
$var wire 1 3# branch_addr [6] $end
$var wire 1 4# branch_addr [5] $end
$var wire 1 5# branch_addr [4] $end
$var wire 1 6# branch_addr [3] $end
$var wire 1 7# branch_addr [2] $end
$var wire 1 8# branch_addr [1] $end
$var wire 1 9# branch_addr [0] $end
$var wire 1 :# wreg_address [4] $end
$var wire 1 ;# wreg_address [3] $end
$var wire 1 <# wreg_address [2] $end
$var wire 1 =# wreg_address [1] $end
$var wire 1 ># wreg_address [0] $end
$var wire 1 ?# read_data [31] $end
$var wire 1 @# read_data [30] $end
$var wire 1 A# read_data [29] $end
$var wire 1 B# read_data [28] $end
$var wire 1 C# read_data [27] $end
$var wire 1 D# read_data [26] $end
$var wire 1 E# read_data [25] $end
$var wire 1 F# read_data [24] $end
$var wire 1 G# read_data [23] $end
$var wire 1 H# read_data [22] $end
$var wire 1 I# read_data [21] $end
$var wire 1 J# read_data [20] $end
$var wire 1 K# read_data [19] $end
$var wire 1 L# read_data [18] $end
$var wire 1 M# read_data [17] $end
$var wire 1 N# read_data [16] $end
$var wire 1 O# read_data [15] $end
$var wire 1 P# read_data [14] $end
$var wire 1 Q# read_data [13] $end
$var wire 1 R# read_data [12] $end
$var wire 1 S# read_data [11] $end
$var wire 1 T# read_data [10] $end
$var wire 1 U# read_data [9] $end
$var wire 1 V# read_data [8] $end
$var wire 1 W# read_data [7] $end
$var wire 1 X# read_data [6] $end
$var wire 1 Y# read_data [5] $end
$var wire 1 Z# read_data [4] $end
$var wire 1 [# read_data [3] $end
$var wire 1 \# read_data [2] $end
$var wire 1 ]# read_data [1] $end
$var wire 1 ^# read_data [0] $end
$var wire 1 _# do_branch $end
$var wire 1 `# regdst $end
$var wire 1 a# memread $end
$var wire 1 b# memtoreg $end
$var wire 1 c# memwrite $end
$var wire 1 d# alusrc $end
$var wire 1 e# regwrite $end
$var wire 1 f# branch $end

$scope module fetch $end
$var wire 1 $ clock $end
$var wire 1 % reset $end
$var wire 1 x" branch_addr [31] $end
$var wire 1 y" branch_addr [30] $end
$var wire 1 z" branch_addr [29] $end
$var wire 1 {" branch_addr [28] $end
$var wire 1 |" branch_addr [27] $end
$var wire 1 }" branch_addr [26] $end
$var wire 1 ~" branch_addr [25] $end
$var wire 1 !# branch_addr [24] $end
$var wire 1 "# branch_addr [23] $end
$var wire 1 ## branch_addr [22] $end
$var wire 1 $# branch_addr [21] $end
$var wire 1 %# branch_addr [20] $end
$var wire 1 &# branch_addr [19] $end
$var wire 1 '# branch_addr [18] $end
$var wire 1 (# branch_addr [17] $end
$var wire 1 )# branch_addr [16] $end
$var wire 1 *# branch_addr [15] $end
$var wire 1 +# branch_addr [14] $end
$var wire 1 ,# branch_addr [13] $end
$var wire 1 -# branch_addr [12] $end
$var wire 1 .# branch_addr [11] $end
$var wire 1 /# branch_addr [10] $end
$var wire 1 0# branch_addr [9] $end
$var wire 1 1# branch_addr [8] $end
$var wire 1 2# branch_addr [7] $end
$var wire 1 3# branch_addr [6] $end
$var wire 1 4# branch_addr [5] $end
$var wire 1 5# branch_addr [4] $end
$var wire 1 6# branch_addr [3] $end
$var wire 1 7# branch_addr [2] $end
$var wire 1 8# branch_addr [1] $end
$var wire 1 9# branch_addr [0] $end
$var wire 1 _# do_branch $end
$var wire 1 & instruction [31] $end
$var wire 1 ' instruction [30] $end
$var wire 1 ( instruction [29] $end
$var wire 1 ) instruction [28] $end
$var wire 1 * instruction [27] $end
$var wire 1 + instruction [26] $end
$var wire 1 , instruction [25] $end
$var wire 1 - instruction [24] $end
$var wire 1 . instruction [23] $end
$var wire 1 / instruction [22] $end
$var wire 1 0 instruction [21] $end
$var wire 1 1 instruction [20] $end
$var wire 1 2 instruction [19] $end
$var wire 1 3 instruction [18] $end
$var wire 1 4 instruction [17] $end
$var wire 1 5 instruction [16] $end
$var wire 1 6 instruction [15] $end
$var wire 1 7 instruction [14] $end
$var wire 1 8 instruction [13] $end
$var wire 1 9 instruction [12] $end
$var wire 1 : instruction [11] $end
$var wire 1 ; instruction [10] $end
$var wire 1 < instruction [9] $end
$var wire 1 = instruction [8] $end
$var wire 1 > instruction [7] $end
$var wire 1 ? instruction [6] $end
$var wire 1 @ instruction [5] $end
$var wire 1 A instruction [4] $end
$var wire 1 B instruction [3] $end
$var wire 1 C instruction [2] $end
$var wire 1 D instruction [1] $end
$var wire 1 E instruction [0] $end
$var wire 1 F pc4 [31] $end
$var wire 1 G pc4 [30] $end
$var wire 1 H pc4 [29] $end
$var wire 1 I pc4 [28] $end
$var wire 1 J pc4 [27] $end
$var wire 1 K pc4 [26] $end
$var wire 1 L pc4 [25] $end
$var wire 1 M pc4 [24] $end
$var wire 1 N pc4 [23] $end
$var wire 1 O pc4 [22] $end
$var wire 1 P pc4 [21] $end
$var wire 1 Q pc4 [20] $end
$var wire 1 R pc4 [19] $end
$var wire 1 S pc4 [18] $end
$var wire 1 T pc4 [17] $end
$var wire 1 U pc4 [16] $end
$var wire 1 V pc4 [15] $end
$var wire 1 W pc4 [14] $end
$var wire 1 X pc4 [13] $end
$var wire 1 Y pc4 [12] $end
$var wire 1 Z pc4 [11] $end
$var wire 1 [ pc4 [10] $end
$var wire 1 \ pc4 [9] $end
$var wire 1 ] pc4 [8] $end
$var wire 1 ^ pc4 [7] $end
$var wire 1 _ pc4 [6] $end
$var wire 1 ` pc4 [5] $end
$var wire 1 a pc4 [4] $end
$var wire 1 b pc4 [3] $end
$var wire 1 c pc4 [2] $end
$var wire 1 d pc4 [1] $end
$var wire 1 e pc4 [0] $end
$var reg 32 g# pc [31:0] $end
$var wire 1 h# next_pc [31] $end
$var wire 1 i# next_pc [30] $end
$var wire 1 j# next_pc [29] $end
$var wire 1 k# next_pc [28] $end
$var wire 1 l# next_pc [27] $end
$var wire 1 m# next_pc [26] $end
$var wire 1 n# next_pc [25] $end
$var wire 1 o# next_pc [24] $end
$var wire 1 p# next_pc [23] $end
$var wire 1 q# next_pc [22] $end
$var wire 1 r# next_pc [21] $end
$var wire 1 s# next_pc [20] $end
$var wire 1 t# next_pc [19] $end
$var wire 1 u# next_pc [18] $end
$var wire 1 v# next_pc [17] $end
$var wire 1 w# next_pc [16] $end
$var wire 1 x# next_pc [15] $end
$var wire 1 y# next_pc [14] $end
$var wire 1 z# next_pc [13] $end
$var wire 1 {# next_pc [12] $end
$var wire 1 |# next_pc [11] $end
$var wire 1 }# next_pc [10] $end
$var wire 1 ~# next_pc [9] $end
$var wire 1 !$ next_pc [8] $end
$var wire 1 "$ next_pc [7] $end
$var wire 1 #$ next_pc [6] $end
$var wire 1 $$ next_pc [5] $end
$var wire 1 %$ next_pc [4] $end
$var wire 1 &$ next_pc [3] $end
$var wire 1 '$ next_pc [2] $end
$var wire 1 ($ next_pc [1] $end
$var wire 1 )$ next_pc [0] $end
$upscope $end

$scope module control $end
$var wire 1 & opcode [5] $end
$var wire 1 ' opcode [4] $end
$var wire 1 ( opcode [3] $end
$var wire 1 ) opcode [2] $end
$var wire 1 * opcode [1] $end
$var wire 1 + opcode [0] $end
$var wire 1 `# regdst $end
$var wire 1 a# memread $end
$var wire 1 b# memtoreg $end
$var wire 1 c# memwrite $end
$var wire 1 d# alusrc $end
$var wire 1 e# regwrite $end
$var wire 1 f# branch $end
$var wire 1 f aluop [1] $end
$var wire 1 g aluop [0] $end
$var wire 1 V" immed [1] $end
$var wire 1 W" immed [0] $end
$var wire 1 *$ rformat $end
$var wire 1 +$ lw $end
$var wire 1 ,$ sw $end
$var wire 1 -$ beq $end
$var wire 1 .$ j $end
$var wire 1 /$ jal $end
$var wire 1 0$ andi $end
$var wire 1 1$ ori $end
$var wire 1 2$ addi $end
$var wire 1 3$ slti $end
$var wire 1 4$ lui $end
$upscope $end

$scope module decode $end
$var wire 1 $ clock $end
$var wire 1 % reset $end
$var wire 1 & instruction [31] $end
$var wire 1 ' instruction [30] $end
$var wire 1 ( instruction [29] $end
$var wire 1 ) instruction [28] $end
$var wire 1 * instruction [27] $end
$var wire 1 + instruction [26] $end
$var wire 1 , instruction [25] $end
$var wire 1 - instruction [24] $end
$var wire 1 . instruction [23] $end
$var wire 1 / instruction [22] $end
$var wire 1 0 instruction [21] $end
$var wire 1 1 instruction [20] $end
$var wire 1 2 instruction [19] $end
$var wire 1 3 instruction [18] $end
$var wire 1 4 instruction [17] $end
$var wire 1 5 instruction [16] $end
$var wire 1 6 instruction [15] $end
$var wire 1 7 instruction [14] $end
$var wire 1 8 instruction [13] $end
$var wire 1 9 instruction [12] $end
$var wire 1 : instruction [11] $end
$var wire 1 ; instruction [10] $end
$var wire 1 < instruction [9] $end
$var wire 1 = instruction [8] $end
$var wire 1 > instruction [7] $end
$var wire 1 ? instruction [6] $end
$var wire 1 @ instruction [5] $end
$var wire 1 A instruction [4] $end
$var wire 1 B instruction [3] $end
$var wire 1 C instruction [2] $end
$var wire 1 D instruction [1] $end
$var wire 1 E instruction [0] $end
$var wire 1 ?# memory_data [31] $end
$var wire 1 @# memory_data [30] $end
$var wire 1 A# memory_data [29] $end
$var wire 1 B# memory_data [28] $end
$var wire 1 C# memory_data [27] $end
$var wire 1 D# memory_data [26] $end
$var wire 1 E# memory_data [25] $end
$var wire 1 F# memory_data [24] $end
$var wire 1 G# memory_data [23] $end
$var wire 1 H# memory_data [22] $end
$var wire 1 I# memory_data [21] $end
$var wire 1 J# memory_data [20] $end
$var wire 1 K# memory_data [19] $end
$var wire 1 L# memory_data [18] $end
$var wire 1 M# memory_data [17] $end
$var wire 1 N# memory_data [16] $end
$var wire 1 O# memory_data [15] $end
$var wire 1 P# memory_data [14] $end
$var wire 1 Q# memory_data [13] $end
$var wire 1 R# memory_data [12] $end
$var wire 1 S# memory_data [11] $end
$var wire 1 T# memory_data [10] $end
$var wire 1 U# memory_data [9] $end
$var wire 1 V# memory_data [8] $end
$var wire 1 W# memory_data [7] $end
$var wire 1 X# memory_data [6] $end
$var wire 1 Y# memory_data [5] $end
$var wire 1 Z# memory_data [4] $end
$var wire 1 [# memory_data [3] $end
$var wire 1 \# memory_data [2] $end
$var wire 1 ]# memory_data [1] $end
$var wire 1 ^# memory_data [0] $end
$var wire 1 X" alu_result [31] $end
$var wire 1 Y" alu_result [30] $end
$var wire 1 Z" alu_result [29] $end
$var wire 1 [" alu_result [28] $end
$var wire 1 \" alu_result [27] $end
$var wire 1 ]" alu_result [26] $end
$var wire 1 ^" alu_result [25] $end
$var wire 1 _" alu_result [24] $end
$var wire 1 `" alu_result [23] $end
$var wire 1 a" alu_result [22] $end
$var wire 1 b" alu_result [21] $end
$var wire 1 c" alu_result [20] $end
$var wire 1 d" alu_result [19] $end
$var wire 1 e" alu_result [18] $end
$var wire 1 f" alu_result [17] $end
$var wire 1 g" alu_result [16] $end
$var wire 1 h" alu_result [15] $end
$var wire 1 i" alu_result [14] $end
$var wire 1 j" alu_result [13] $end
$var wire 1 k" alu_result [12] $end
$var wire 1 l" alu_result [11] $end
$var wire 1 m" alu_result [10] $end
$var wire 1 n" alu_result [9] $end
$var wire 1 o" alu_result [8] $end
$var wire 1 p" alu_result [7] $end
$var wire 1 q" alu_result [6] $end
$var wire 1 r" alu_result [5] $end
$var wire 1 s" alu_result [4] $end
$var wire 1 t" alu_result [3] $end
$var wire 1 u" alu_result [2] $end
$var wire 1 v" alu_result [1] $end
$var wire 1 w" alu_result [0] $end
$var wire 1 e# regwrite $end
$var wire 1 b# memtoreg $end
$var wire 1 :# wreg_address [4] $end
$var wire 1 ;# wreg_address [3] $end
$var wire 1 <# wreg_address [2] $end
$var wire 1 =# wreg_address [1] $end
$var wire 1 ># wreg_address [0] $end
$var wire 1 h register_rs [31] $end
$var wire 1 i register_rs [30] $end
$var wire 1 j register_rs [29] $end
$var wire 1 k register_rs [28] $end
$var wire 1 l register_rs [27] $end
$var wire 1 m register_rs [26] $end
$var wire 1 n register_rs [25] $end
$var wire 1 o register_rs [24] $end
$var wire 1 p register_rs [23] $end
$var wire 1 q register_rs [22] $end
$var wire 1 r register_rs [21] $end
$var wire 1 s register_rs [20] $end
$var wire 1 t register_rs [19] $end
$var wire 1 u register_rs [18] $end
$var wire 1 v register_rs [17] $end
$var wire 1 w register_rs [16] $end
$var wire 1 x register_rs [15] $end
$var wire 1 y register_rs [14] $end
$var wire 1 z register_rs [13] $end
$var wire 1 { register_rs [12] $end
$var wire 1 | register_rs [11] $end
$var wire 1 } register_rs [10] $end
$var wire 1 ~ register_rs [9] $end
$var wire 1 !! register_rs [8] $end
$var wire 1 "! register_rs [7] $end
$var wire 1 #! register_rs [6] $end
$var wire 1 $! register_rs [5] $end
$var wire 1 %! register_rs [4] $end
$var wire 1 &! register_rs [3] $end
$var wire 1 '! register_rs [2] $end
$var wire 1 (! register_rs [1] $end
$var wire 1 )! register_rs [0] $end
$var wire 1 *! register_rt [31] $end
$var wire 1 +! register_rt [30] $end
$var wire 1 ,! register_rt [29] $end
$var wire 1 -! register_rt [28] $end
$var wire 1 .! register_rt [27] $end
$var wire 1 /! register_rt [26] $end
$var wire 1 0! register_rt [25] $end
$var wire 1 1! register_rt [24] $end
$var wire 1 2! register_rt [23] $end
$var wire 1 3! register_rt [22] $end
$var wire 1 4! register_rt [21] $end
$var wire 1 5! register_rt [20] $end
$var wire 1 6! register_rt [19] $end
$var wire 1 7! register_rt [18] $end
$var wire 1 8! register_rt [17] $end
$var wire 1 9! register_rt [16] $end
$var wire 1 :! register_rt [15] $end
$var wire 1 ;! register_rt [14] $end
$var wire 1 <! register_rt [13] $end
$var wire 1 =! register_rt [12] $end
$var wire 1 >! register_rt [11] $end
$var wire 1 ?! register_rt [10] $end
$var wire 1 @! register_rt [9] $end
$var wire 1 A! register_rt [8] $end
$var wire 1 B! register_rt [7] $end
$var wire 1 C! register_rt [6] $end
$var wire 1 D! register_rt [5] $end
$var wire 1 E! register_rt [4] $end
$var wire 1 F! register_rt [3] $end
$var wire 1 G! register_rt [2] $end
$var wire 1 H! register_rt [1] $end
$var wire 1 I! register_rt [0] $end
$var wire 1 J! sign_extend [31] $end
$var wire 1 K! sign_extend [30] $end
$var wire 1 L! sign_extend [29] $end
$var wire 1 M! sign_extend [28] $end
$var wire 1 N! sign_extend [27] $end
$var wire 1 O! sign_extend [26] $end
$var wire 1 P! sign_extend [25] $end
$var wire 1 Q! sign_extend [24] $end
$var wire 1 R! sign_extend [23] $end
$var wire 1 S! sign_extend [22] $end
$var wire 1 T! sign_extend [21] $end
$var wire 1 U! sign_extend [20] $end
$var wire 1 V! sign_extend [19] $end
$var wire 1 W! sign_extend [18] $end
$var wire 1 X! sign_extend [17] $end
$var wire 1 Y! sign_extend [16] $end
$var wire 1 Z! sign_extend [15] $end
$var wire 1 [! sign_extend [14] $end
$var wire 1 \! sign_extend [13] $end
$var wire 1 ]! sign_extend [12] $end
$var wire 1 ^! sign_extend [11] $end
$var wire 1 _! sign_extend [10] $end
$var wire 1 `! sign_extend [9] $end
$var wire 1 a! sign_extend [8] $end
$var wire 1 b! sign_extend [7] $end
$var wire 1 c! sign_extend [6] $end
$var wire 1 d! sign_extend [5] $end
$var wire 1 e! sign_extend [4] $end
$var wire 1 f! sign_extend [3] $end
$var wire 1 g! sign_extend [2] $end
$var wire 1 h! sign_extend [1] $end
$var wire 1 i! sign_extend [0] $end
$var wire 1 j! unsign_extend [31] $end
$var wire 1 k! unsign_extend [30] $end
$var wire 1 l! unsign_extend [29] $end
$var wire 1 m! unsign_extend [28] $end
$var wire 1 n! unsign_extend [27] $end
$var wire 1 o! unsign_extend [26] $end
$var wire 1 p! unsign_extend [25] $end
$var wire 1 q! unsign_extend [24] $end
$var wire 1 r! unsign_extend [23] $end
$var wire 1 s! unsign_extend [22] $end
$var wire 1 t! unsign_extend [21] $end
$var wire 1 u! unsign_extend [20] $end
$var wire 1 v! unsign_extend [19] $end
$var wire 1 w! unsign_extend [18] $end
$var wire 1 x! unsign_extend [17] $end
$var wire 1 y! unsign_extend [16] $end
$var wire 1 z! unsign_extend [15] $end
$var wire 1 {! unsign_extend [14] $end
$var wire 1 |! unsign_extend [13] $end
$var wire 1 }! unsign_extend [12] $end
$var wire 1 ~! unsign_extend [11] $end
$var wire 1 !" unsign_extend [10] $end
$var wire 1 "" unsign_extend [9] $end
$var wire 1 #" unsign_extend [8] $end
$var wire 1 $" unsign_extend [7] $end
$var wire 1 %" unsign_extend [6] $end
$var wire 1 &" unsign_extend [5] $end
$var wire 1 '" unsign_extend [4] $end
$var wire 1 (" unsign_extend [3] $end
$var wire 1 )" unsign_extend [2] $end
$var wire 1 *" unsign_extend [1] $end
$var wire 1 +" unsign_extend [0] $end
$var wire 1 ," upper_immed [31] $end
$var wire 1 -" upper_immed [30] $end
$var wire 1 ." upper_immed [29] $end
$var wire 1 /" upper_immed [28] $end
$var wire 1 0" upper_immed [27] $end
$var wire 1 1" upper_immed [26] $end
$var wire 1 2" upper_immed [25] $end
$var wire 1 3" upper_immed [24] $end
$var wire 1 4" upper_immed [23] $end
$var wire 1 5" upper_immed [22] $end
$var wire 1 6" upper_immed [21] $end
$var wire 1 7" upper_immed [20] $end
$var wire 1 8" upper_immed [19] $end
$var wire 1 9" upper_immed [18] $end
$var wire 1 :" upper_immed [17] $end
$var wire 1 ;" upper_immed [16] $end
$var wire 1 <" upper_immed [15] $end
$var wire 1 =" upper_immed [14] $end
$var wire 1 >" upper_immed [13] $end
$var wire 1 ?" upper_immed [12] $end
$var wire 1 @" upper_immed [11] $end
$var wire 1 A" upper_immed [10] $end
$var wire 1 B" upper_immed [9] $end
$var wire 1 C" upper_immed [8] $end
$var wire 1 D" upper_immed [7] $end
$var wire 1 E" upper_immed [6] $end
$var wire 1 F" upper_immed [5] $end
$var wire 1 G" upper_immed [4] $end
$var wire 1 H" upper_immed [3] $end
$var wire 1 I" upper_immed [2] $end
$var wire 1 J" upper_immed [1] $end
$var wire 1 K" upper_immed [0] $end
$var wire 1 L" wreg_rd [4] $end
$var wire 1 M" wreg_rd [3] $end
$var wire 1 N" wreg_rd [2] $end
$var wire 1 O" wreg_rd [1] $end
$var wire 1 P" wreg_rd [0] $end
$var wire 1 Q" wreg_rt [4] $end
$var wire 1 R" wreg_rt [3] $end
$var wire 1 S" wreg_rt [2] $end
$var wire 1 T" wreg_rt [1] $end
$var wire 1 U" wreg_rt [0] $end
$var wire 1 5$ write_data [31] $end
$var wire 1 6$ write_data [30] $end
$var wire 1 7$ write_data [29] $end
$var wire 1 8$ write_data [28] $end
$var wire 1 9$ write_data [27] $end
$var wire 1 :$ write_data [26] $end
$var wire 1 ;$ write_data [25] $end
$var wire 1 <$ write_data [24] $end
$var wire 1 =$ write_data [23] $end
$var wire 1 >$ write_data [22] $end
$var wire 1 ?$ write_data [21] $end
$var wire 1 @$ write_data [20] $end
$var wire 1 A$ write_data [19] $end
$var wire 1 B$ write_data [18] $end
$var wire 1 C$ write_data [17] $end
$var wire 1 D$ write_data [16] $end
$var wire 1 E$ write_data [15] $end
$var wire 1 F$ write_data [14] $end
$var wire 1 G$ write_data [13] $end
$var wire 1 H$ write_data [12] $end
$var wire 1 I$ write_data [11] $end
$var wire 1 J$ write_data [10] $end
$var wire 1 K$ write_data [9] $end
$var wire 1 L$ write_data [8] $end
$var wire 1 M$ write_data [7] $end
$var wire 1 N$ write_data [6] $end
$var wire 1 O$ write_data [5] $end
$var wire 1 P$ write_data [4] $end
$var wire 1 Q$ write_data [3] $end
$var wire 1 R$ write_data [2] $end
$var wire 1 S$ write_data [1] $end
$var wire 1 T$ write_data [0] $end
$var wire 1 U$ read_register_1_address [4] $end
$var wire 1 V$ read_register_1_address [3] $end
$var wire 1 W$ read_register_1_address [2] $end
$var wire 1 X$ read_register_1_address [1] $end
$var wire 1 Y$ read_register_1_address [0] $end
$var wire 1 Z$ read_register_2_address [4] $end
$var wire 1 [$ read_register_2_address [3] $end
$var wire 1 \$ read_register_2_address [2] $end
$var wire 1 ]$ read_register_2_address [1] $end
$var wire 1 ^$ read_register_2_address [0] $end
$var wire 1 _$ instruction_immediate_value [15] $end
$var wire 1 `$ instruction_immediate_value [14] $end
$var wire 1 a$ instruction_immediate_value [13] $end
$var wire 1 b$ instruction_immediate_value [12] $end
$var wire 1 c$ instruction_immediate_value [11] $end
$var wire 1 d$ instruction_immediate_value [10] $end
$var wire 1 e$ instruction_immediate_value [9] $end
$var wire 1 f$ instruction_immediate_value [8] $end
$var wire 1 g$ instruction_immediate_value [7] $end
$var wire 1 h$ instruction_immediate_value [6] $end
$var wire 1 i$ instruction_immediate_value [5] $end
$var wire 1 j$ instruction_immediate_value [4] $end
$var wire 1 k$ instruction_immediate_value [3] $end
$var wire 1 l$ instruction_immediate_value [2] $end
$var wire 1 m$ instruction_immediate_value [1] $end
$var wire 1 n$ instruction_immediate_value [0] $end
$var integer 32 o$ i $end
$upscope $end

$scope module execute $end
$var wire 1 F pc4 [31] $end
$var wire 1 G pc4 [30] $end
$var wire 1 H pc4 [29] $end
$var wire 1 I pc4 [28] $end
$var wire 1 J pc4 [27] $end
$var wire 1 K pc4 [26] $end
$var wire 1 L pc4 [25] $end
$var wire 1 M pc4 [24] $end
$var wire 1 N pc4 [23] $end
$var wire 1 O pc4 [22] $end
$var wire 1 P pc4 [21] $end
$var wire 1 Q pc4 [20] $end
$var wire 1 R pc4 [19] $end
$var wire 1 S pc4 [18] $end
$var wire 1 T pc4 [17] $end
$var wire 1 U pc4 [16] $end
$var wire 1 V pc4 [15] $end
$var wire 1 W pc4 [14] $end
$var wire 1 X pc4 [13] $end
$var wire 1 Y pc4 [12] $end
$var wire 1 Z pc4 [11] $end
$var wire 1 [ pc4 [10] $end
$var wire 1 \ pc4 [9] $end
$var wire 1 ] pc4 [8] $end
$var wire 1 ^ pc4 [7] $end
$var wire 1 _ pc4 [6] $end
$var wire 1 ` pc4 [5] $end
$var wire 1 a pc4 [4] $end
$var wire 1 b pc4 [3] $end
$var wire 1 c pc4 [2] $end
$var wire 1 d pc4 [1] $end
$var wire 1 e pc4 [0] $end
$var wire 1 h register_rs [31] $end
$var wire 1 i register_rs [30] $end
$var wire 1 j register_rs [29] $end
$var wire 1 k register_rs [28] $end
$var wire 1 l register_rs [27] $end
$var wire 1 m register_rs [26] $end
$var wire 1 n register_rs [25] $end
$var wire 1 o register_rs [24] $end
$var wire 1 p register_rs [23] $end
$var wire 1 q register_rs [22] $end
$var wire 1 r register_rs [21] $end
$var wire 1 s register_rs [20] $end
$var wire 1 t register_rs [19] $end
$var wire 1 u register_rs [18] $end
$var wire 1 v register_rs [17] $end
$var wire 1 w register_rs [16] $end
$var wire 1 x register_rs [15] $end
$var wire 1 y register_rs [14] $end
$var wire 1 z register_rs [13] $end
$var wire 1 { register_rs [12] $end
$var wire 1 | register_rs [11] $end
$var wire 1 } register_rs [10] $end
$var wire 1 ~ register_rs [9] $end
$var wire 1 !! register_rs [8] $end
$var wire 1 "! register_rs [7] $end
$var wire 1 #! register_rs [6] $end
$var wire 1 $! register_rs [5] $end
$var wire 1 %! register_rs [4] $end
$var wire 1 &! register_rs [3] $end
$var wire 1 '! register_rs [2] $end
$var wire 1 (! register_rs [1] $end
$var wire 1 )! register_rs [0] $end
$var wire 1 *! register_rt [31] $end
$var wire 1 +! register_rt [30] $end
$var wire 1 ,! register_rt [29] $end
$var wire 1 -! register_rt [28] $end
$var wire 1 .! register_rt [27] $end
$var wire 1 /! register_rt [26] $end
$var wire 1 0! register_rt [25] $end
$var wire 1 1! register_rt [24] $end
$var wire 1 2! register_rt [23] $end
$var wire 1 3! register_rt [22] $end
$var wire 1 4! register_rt [21] $end
$var wire 1 5! register_rt [20] $end
$var wire 1 6! register_rt [19] $end
$var wire 1 7! register_rt [18] $end
$var wire 1 8! register_rt [17] $end
$var wire 1 9! register_rt [16] $end
$var wire 1 :! register_rt [15] $end
$var wire 1 ;! register_rt [14] $end
$var wire 1 <! register_rt [13] $end
$var wire 1 =! register_rt [12] $end
$var wire 1 >! register_rt [11] $end
$var wire 1 ?! register_rt [10] $end
$var wire 1 @! register_rt [9] $end
$var wire 1 A! register_rt [8] $end
$var wire 1 B! register_rt [7] $end
$var wire 1 C! register_rt [6] $end
$var wire 1 D! register_rt [5] $end
$var wire 1 E! register_rt [4] $end
$var wire 1 F! register_rt [3] $end
$var wire 1 G! register_rt [2] $end
$var wire 1 H! register_rt [1] $end
$var wire 1 I! register_rt [0] $end
$var wire 1 @ function_opcode [5] $end
$var wire 1 A function_opcode [4] $end
$var wire 1 B function_opcode [3] $end
$var wire 1 C function_opcode [2] $end
$var wire 1 D function_opcode [1] $end
$var wire 1 E function_opcode [0] $end
$var wire 1 J! sign_extend [31] $end
$var wire 1 K! sign_extend [30] $end
$var wire 1 L! sign_extend [29] $end
$var wire 1 M! sign_extend [28] $end
$var wire 1 N! sign_extend [27] $end
$var wire 1 O! sign_extend [26] $end
$var wire 1 P! sign_extend [25] $end
$var wire 1 Q! sign_extend [24] $end
$var wire 1 R! sign_extend [23] $end
$var wire 1 S! sign_extend [22] $end
$var wire 1 T! sign_extend [21] $end
$var wire 1 U! sign_extend [20] $end
$var wire 1 V! sign_extend [19] $end
$var wire 1 W! sign_extend [18] $end
$var wire 1 X! sign_extend [17] $end
$var wire 1 Y! sign_extend [16] $end
$var wire 1 Z! sign_extend [15] $end
$var wire 1 [! sign_extend [14] $end
$var wire 1 \! sign_extend [13] $end
$var wire 1 ]! sign_extend [12] $end
$var wire 1 ^! sign_extend [11] $end
$var wire 1 _! sign_extend [10] $end
$var wire 1 `! sign_extend [9] $end
$var wire 1 a! sign_extend [8] $end
$var wire 1 b! sign_extend [7] $end
$var wire 1 c! sign_extend [6] $end
$var wire 1 d! sign_extend [5] $end
$var wire 1 e! sign_extend [4] $end
$var wire 1 f! sign_extend [3] $end
$var wire 1 g! sign_extend [2] $end
$var wire 1 h! sign_extend [1] $end
$var wire 1 i! sign_extend [0] $end
$var wire 1 j! unsign_extend [31] $end
$var wire 1 k! unsign_extend [30] $end
$var wire 1 l! unsign_extend [29] $end
$var wire 1 m! unsign_extend [28] $end
$var wire 1 n! unsign_extend [27] $end
$var wire 1 o! unsign_extend [26] $end
$var wire 1 p! unsign_extend [25] $end
$var wire 1 q! unsign_extend [24] $end
$var wire 1 r! unsign_extend [23] $end
$var wire 1 s! unsign_extend [22] $end
$var wire 1 t! unsign_extend [21] $end
$var wire 1 u! unsign_extend [20] $end
$var wire 1 v! unsign_extend [19] $end
$var wire 1 w! unsign_extend [18] $end
$var wire 1 x! unsign_extend [17] $end
$var wire 1 y! unsign_extend [16] $end
$var wire 1 z! unsign_extend [15] $end
$var wire 1 {! unsign_extend [14] $end
$var wire 1 |! unsign_extend [13] $end
$var wire 1 }! unsign_extend [12] $end
$var wire 1 ~! unsign_extend [11] $end
$var wire 1 !" unsign_extend [10] $end
$var wire 1 "" unsign_extend [9] $end
$var wire 1 #" unsign_extend [8] $end
$var wire 1 $" unsign_extend [7] $end
$var wire 1 %" unsign_extend [6] $end
$var wire 1 &" unsign_extend [5] $end
$var wire 1 '" unsign_extend [4] $end
$var wire 1 (" unsign_extend [3] $end
$var wire 1 )" unsign_extend [2] $end
$var wire 1 *" unsign_extend [1] $end
$var wire 1 +" unsign_extend [0] $end
$var wire 1 ," upper_immed [31] $end
$var wire 1 -" upper_immed [30] $end
$var wire 1 ." upper_immed [29] $end
$var wire 1 /" upper_immed [28] $end
$var wire 1 0" upper_immed [27] $end
$var wire 1 1" upper_immed [26] $end
$var wire 1 2" upper_immed [25] $end
$var wire 1 3" upper_immed [24] $end
$var wire 1 4" upper_immed [23] $end
$var wire 1 5" upper_immed [22] $end
$var wire 1 6" upper_immed [21] $end
$var wire 1 7" upper_immed [20] $end
$var wire 1 8" upper_immed [19] $end
$var wire 1 9" upper_immed [18] $end
$var wire 1 :" upper_immed [17] $end
$var wire 1 ;" upper_immed [16] $end
$var wire 1 <" upper_immed [15] $end
$var wire 1 =" upper_immed [14] $end
$var wire 1 >" upper_immed [13] $end
$var wire 1 ?" upper_immed [12] $end
$var wire 1 @" upper_immed [11] $end
$var wire 1 A" upper_immed [10] $end
$var wire 1 B" upper_immed [9] $end
$var wire 1 C" upper_immed [8] $end
$var wire 1 D" upper_immed [7] $end
$var wire 1 E" upper_immed [6] $end
$var wire 1 F" upper_immed [5] $end
$var wire 1 G" upper_immed [4] $end
$var wire 1 H" upper_immed [3] $end
$var wire 1 I" upper_immed [2] $end
$var wire 1 J" upper_immed [1] $end
$var wire 1 K" upper_immed [0] $end
$var wire 1 L" wreg_rd [4] $end
$var wire 1 M" wreg_rd [3] $end
$var wire 1 N" wreg_rd [2] $end
$var wire 1 O" wreg_rd [1] $end
$var wire 1 P" wreg_rd [0] $end
$var wire 1 Q" wreg_rt [4] $end
$var wire 1 R" wreg_rt [3] $end
$var wire 1 S" wreg_rt [2] $end
$var wire 1 T" wreg_rt [1] $end
$var wire 1 U" wreg_rt [0] $end
$var wire 1 f aluop [1] $end
$var wire 1 g aluop [0] $end
$var wire 1 f# branch $end
$var wire 1 d# alusrc $end
$var wire 1 `# regdst $end
$var wire 1 V" immed [1] $end
$var wire 1 W" immed [0] $end
$var reg 32 p$ alu_result [31:0] $end
$var wire 1 x" branch_addr [31] $end
$var wire 1 y" branch_addr [30] $end
$var wire 1 z" branch_addr [29] $end
$var wire 1 {" branch_addr [28] $end
$var wire 1 |" branch_addr [27] $end
$var wire 1 }" branch_addr [26] $end
$var wire 1 ~" branch_addr [25] $end
$var wire 1 !# branch_addr [24] $end
$var wire 1 "# branch_addr [23] $end
$var wire 1 ## branch_addr [22] $end
$var wire 1 $# branch_addr [21] $end
$var wire 1 %# branch_addr [20] $end
$var wire 1 &# branch_addr [19] $end
$var wire 1 '# branch_addr [18] $end
$var wire 1 (# branch_addr [17] $end
$var wire 1 )# branch_addr [16] $end
$var wire 1 *# branch_addr [15] $end
$var wire 1 +# branch_addr [14] $end
$var wire 1 ,# branch_addr [13] $end
$var wire 1 -# branch_addr [12] $end
$var wire 1 .# branch_addr [11] $end
$var wire 1 /# branch_addr [10] $end
$var wire 1 0# branch_addr [9] $end
$var wire 1 1# branch_addr [8] $end
$var wire 1 2# branch_addr [7] $end
$var wire 1 3# branch_addr [6] $end
$var wire 1 4# branch_addr [5] $end
$var wire 1 5# branch_addr [4] $end
$var wire 1 6# branch_addr [3] $end
$var wire 1 7# branch_addr [2] $end
$var wire 1 8# branch_addr [1] $end
$var wire 1 9# branch_addr [0] $end
$var wire 1 :# wreg_address [4] $end
$var wire 1 ;# wreg_address [3] $end
$var wire 1 <# wreg_address [2] $end
$var wire 1 =# wreg_address [1] $end
$var wire 1 ># wreg_address [0] $end
$var wire 1 _# do_branch $end
$var wire 1 q$ zero $end
$var wire 1 r$ ainput [31] $end
$var wire 1 s$ ainput [30] $end
$var wire 1 t$ ainput [29] $end
$var wire 1 u$ ainput [28] $end
$var wire 1 v$ ainput [27] $end
$var wire 1 w$ ainput [26] $end
$var wire 1 x$ ainput [25] $end
$var wire 1 y$ ainput [24] $end
$var wire 1 z$ ainput [23] $end
$var wire 1 {$ ainput [22] $end
$var wire 1 |$ ainput [21] $end
$var wire 1 }$ ainput [20] $end
$var wire 1 ~$ ainput [19] $end
$var wire 1 !% ainput [18] $end
$var wire 1 "% ainput [17] $end
$var wire 1 #% ainput [16] $end
$var wire 1 $% ainput [15] $end
$var wire 1 %% ainput [14] $end
$var wire 1 &% ainput [13] $end
$var wire 1 '% ainput [12] $end
$var wire 1 (% ainput [11] $end
$var wire 1 )% ainput [10] $end
$var wire 1 *% ainput [9] $end
$var wire 1 +% ainput [8] $end
$var wire 1 ,% ainput [7] $end
$var wire 1 -% ainput [6] $end
$var wire 1 .% ainput [5] $end
$var wire 1 /% ainput [4] $end
$var wire 1 0% ainput [3] $end
$var wire 1 1% ainput [2] $end
$var wire 1 2% ainput [1] $end
$var wire 1 3% ainput [0] $end
$var wire 1 4% binput [31] $end
$var wire 1 5% binput [30] $end
$var wire 1 6% binput [29] $end
$var wire 1 7% binput [28] $end
$var wire 1 8% binput [27] $end
$var wire 1 9% binput [26] $end
$var wire 1 :% binput [25] $end
$var wire 1 ;% binput [24] $end
$var wire 1 <% binput [23] $end
$var wire 1 =% binput [22] $end
$var wire 1 >% binput [21] $end
$var wire 1 ?% binput [20] $end
$var wire 1 @% binput [19] $end
$var wire 1 A% binput [18] $end
$var wire 1 B% binput [17] $end
$var wire 1 C% binput [16] $end
$var wire 1 D% binput [15] $end
$var wire 1 E% binput [14] $end
$var wire 1 F% binput [13] $end
$var wire 1 G% binput [12] $end
$var wire 1 H% binput [11] $end
$var wire 1 I% binput [10] $end
$var wire 1 J% binput [9] $end
$var wire 1 K% binput [8] $end
$var wire 1 L% binput [7] $end
$var wire 1 M% binput [6] $end
$var wire 1 N% binput [5] $end
$var wire 1 O% binput [4] $end
$var wire 1 P% binput [3] $end
$var wire 1 Q% binput [2] $end
$var wire 1 R% binput [1] $end
$var wire 1 S% binput [0] $end
$var reg 3 T% alu_ctl [2:0] $end
$var reg 32 U% true_sign [31:0] $end
$var wire 1 V% immediate $end
$upscope $end

$scope module memory $end
$var wire 1 $ clock $end
$var wire 1 X" address [31] $end
$var wire 1 Y" address [30] $end
$var wire 1 Z" address [29] $end
$var wire 1 [" address [28] $end
$var wire 1 \" address [27] $end
$var wire 1 ]" address [26] $end
$var wire 1 ^" address [25] $end
$var wire 1 _" address [24] $end
$var wire 1 `" address [23] $end
$var wire 1 a" address [22] $end
$var wire 1 b" address [21] $end
$var wire 1 c" address [20] $end
$var wire 1 d" address [19] $end
$var wire 1 e" address [18] $end
$var wire 1 f" address [17] $end
$var wire 1 g" address [16] $end
$var wire 1 h" address [15] $end
$var wire 1 i" address [14] $end
$var wire 1 j" address [13] $end
$var wire 1 k" address [12] $end
$var wire 1 l" address [11] $end
$var wire 1 m" address [10] $end
$var wire 1 n" address [9] $end
$var wire 1 o" address [8] $end
$var wire 1 p" address [7] $end
$var wire 1 q" address [6] $end
$var wire 1 r" address [5] $end
$var wire 1 s" address [4] $end
$var wire 1 t" address [3] $end
$var wire 1 u" address [2] $end
$var wire 1 v" address [1] $end
$var wire 1 w" address [0] $end
$var wire 1 *! write_data [31] $end
$var wire 1 +! write_data [30] $end
$var wire 1 ,! write_data [29] $end
$var wire 1 -! write_data [28] $end
$var wire 1 .! write_data [27] $end
$var wire 1 /! write_data [26] $end
$var wire 1 0! write_data [25] $end
$var wire 1 1! write_data [24] $end
$var wire 1 2! write_data [23] $end
$var wire 1 3! write_data [22] $end
$var wire 1 4! write_data [21] $end
$var wire 1 5! write_data [20] $end
$var wire 1 6! write_data [19] $end
$var wire 1 7! write_data [18] $end
$var wire 1 8! write_data [17] $end
$var wire 1 9! write_data [16] $end
$var wire 1 :! write_data [15] $end
$var wire 1 ;! write_data [14] $end
$var wire 1 <! write_data [13] $end
$var wire 1 =! write_data [12] $end
$var wire 1 >! write_data [11] $end
$var wire 1 ?! write_data [10] $end
$var wire 1 @! write_data [9] $end
$var wire 1 A! write_data [8] $end
$var wire 1 B! write_data [7] $end
$var wire 1 C! write_data [6] $end
$var wire 1 D! write_data [5] $end
$var wire 1 E! write_data [4] $end
$var wire 1 F! write_data [3] $end
$var wire 1 G! write_data [2] $end
$var wire 1 H! write_data [1] $end
$var wire 1 I! write_data [0] $end
$var wire 1 c# memwrite $end
$var wire 1 ?# read_data [31] $end
$var wire 1 @# read_data [30] $end
$var wire 1 A# read_data [29] $end
$var wire 1 B# read_data [28] $end
$var wire 1 C# read_data [27] $end
$var wire 1 D# read_data [26] $end
$var wire 1 E# read_data [25] $end
$var wire 1 F# read_data [24] $end
$var wire 1 G# read_data [23] $end
$var wire 1 H# read_data [22] $end
$var wire 1 I# read_data [21] $end
$var wire 1 J# read_data [20] $end
$var wire 1 K# read_data [19] $end
$var wire 1 L# read_data [18] $end
$var wire 1 M# read_data [17] $end
$var wire 1 N# read_data [16] $end
$var wire 1 O# read_data [15] $end
$var wire 1 P# read_data [14] $end
$var wire 1 Q# read_data [13] $end
$var wire 1 R# read_data [12] $end
$var wire 1 S# read_data [11] $end
$var wire 1 T# read_data [10] $end
$var wire 1 U# read_data [9] $end
$var wire 1 V# read_data [8] $end
$var wire 1 W# read_data [7] $end
$var wire 1 X# read_data [6] $end
$var wire 1 Y# read_data [5] $end
$var wire 1 Z# read_data [4] $end
$var wire 1 [# read_data [3] $end
$var wire 1 \# read_data [2] $end
$var wire 1 ]# read_data [1] $end
$var wire 1 ^# read_data [0] $end
$var integer 32 W% i $end

$scope begin genblk2[31] $end
$var parameter 32 X% index $end
$upscope $end

$scope begin genblk2[30] $end
$var parameter 32 Y% index $end
$upscope $end

$scope begin genblk2[29] $end
$var parameter 32 Z% index $end
$upscope $end

$scope begin genblk2[28] $end
$var parameter 32 [% index $end
$upscope $end

$scope begin genblk2[27] $end
$var parameter 32 \% index $end
$upscope $end

$scope begin genblk2[26] $end
$var parameter 32 ]% index $end
$upscope $end

$scope begin genblk2[25] $end
$var parameter 32 ^% index $end
$upscope $end

$scope begin genblk2[24] $end
$var parameter 32 _% index $end
$upscope $end

$scope begin genblk2[23] $end
$var parameter 32 `% index $end
$upscope $end

$scope begin genblk2[22] $end
$var parameter 32 a% index $end
$upscope $end

$scope begin genblk2[21] $end
$var parameter 32 b% index $end
$upscope $end

$scope begin genblk2[20] $end
$var parameter 32 c% index $end
$upscope $end

$scope begin genblk2[19] $end
$var parameter 32 d% index $end
$upscope $end

$scope begin genblk2[18] $end
$var parameter 32 e% index $end
$upscope $end

$scope begin genblk2[17] $end
$var parameter 32 f% index $end
$upscope $end

$scope begin genblk2[16] $end
$var parameter 32 g% index $end
$upscope $end

$scope begin genblk2[15] $end
$var parameter 32 h% index $end
$upscope $end

$scope begin genblk2[14] $end
$var parameter 32 i% index $end
$upscope $end

$scope begin genblk2[13] $end
$var parameter 32 j% index $end
$upscope $end

$scope begin genblk2[12] $end
$var parameter 32 k% index $end
$upscope $end

$scope begin genblk2[11] $end
$var parameter 32 l% index $end
$upscope $end

$scope begin genblk2[10] $end
$var parameter 32 m% index $end
$upscope $end

$scope begin genblk2[9] $end
$var parameter 32 n% index $end
$upscope $end

$scope begin genblk2[8] $end
$var parameter 32 o% index $end
$upscope $end

$scope begin genblk2[7] $end
$var parameter 32 p% index $end
$upscope $end

$scope begin genblk2[6] $end
$var parameter 32 q% index $end
$upscope $end

$scope begin genblk2[5] $end
$var parameter 32 r% index $end
$upscope $end

$scope begin genblk2[4] $end
$var parameter 32 s% index $end
$upscope $end

$scope begin genblk2[3] $end
$var parameter 32 t% index $end
$upscope $end

$scope begin genblk2[2] $end
$var parameter 32 u% index $end
$upscope $end

$scope begin genblk2[1] $end
$var parameter 32 v% index $end
$upscope $end

$scope begin genblk2[0] $end
$var parameter 32 w% index $end
$upscope $end

$scope begin genblk1[31] $end
$var parameter 32 x% index $end
$upscope $end

$scope begin genblk1[30] $end
$var parameter 32 y% index $end
$upscope $end

$scope begin genblk1[29] $end
$var parameter 32 z% index $end
$upscope $end

$scope begin genblk1[28] $end
$var parameter 32 {% index $end
$upscope $end

$scope begin genblk1[27] $end
$var parameter 32 |% index $end
$upscope $end

$scope begin genblk1[26] $end
$var parameter 32 }% index $end
$upscope $end

$scope begin genblk1[25] $end
$var parameter 32 ~% index $end
$upscope $end

$scope begin genblk1[24] $end
$var parameter 32 !& index $end
$upscope $end

$scope begin genblk1[23] $end
$var parameter 32 "& index $end
$upscope $end

$scope begin genblk1[22] $end
$var parameter 32 #& index $end
$upscope $end

$scope begin genblk1[21] $end
$var parameter 32 $& index $end
$upscope $end

$scope begin genblk1[20] $end
$var parameter 32 %& index $end
$upscope $end

$scope begin genblk1[19] $end
$var parameter 32 && index $end
$upscope $end

$scope begin genblk1[18] $end
$var parameter 32 '& index $end
$upscope $end

$scope begin genblk1[17] $end
$var parameter 32 (& index $end
$upscope $end

$scope begin genblk1[16] $end
$var parameter 32 )& index $end
$upscope $end

$scope begin genblk1[15] $end
$var parameter 32 *& index $end
$upscope $end

$scope begin genblk1[14] $end
$var parameter 32 +& index $end
$upscope $end

$scope begin genblk1[13] $end
$var parameter 32 ,& index $end
$upscope $end

$scope begin genblk1[12] $end
$var parameter 32 -& index $end
$upscope $end

$scope begin genblk1[11] $end
$var parameter 32 .& index $end
$upscope $end

$scope begin genblk1[10] $end
$var parameter 32 /& index $end
$upscope $end

$scope begin genblk1[9] $end
$var parameter 32 0& index $end
$upscope $end

$scope begin genblk1[8] $end
$var parameter 32 1& index $end
$upscope $end

$scope begin genblk1[7] $end
$var parameter 32 2& index $end
$upscope $end

$scope begin genblk1[6] $end
$var parameter 32 3& index $end
$upscope $end

$scope begin genblk1[5] $end
$var parameter 32 4& index $end
$upscope $end

$scope begin genblk1[4] $end
$var parameter 32 5& index $end
$upscope $end

$scope begin genblk1[3] $end
$var parameter 32 6& index $end
$upscope $end

$scope begin genblk1[2] $end
$var parameter 32 7& index $end
$upscope $end

$scope begin genblk1[1] $end
$var parameter 32 8& index $end
$upscope $end

$scope begin genblk1[0] $end
$var parameter 32 9& index $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
1"
bx g#
bx p$
bx T%
bx U%
b0 9&
b1 8&
b10 7&
b11 6&
b100 5&
b101 4&
b110 3&
b111 2&
b1000 1&
b1001 0&
b1010 /&
b1011 .&
b1100 -&
b1101 ,&
b1110 +&
b1111 *&
b10000 )&
b10001 (&
b10010 '&
b10011 &&
b10100 %&
b10101 $&
b10110 #&
b10111 "&
b11000 !&
b11001 ~%
b11010 }%
b11011 |%
b11100 {%
b11101 z%
b11110 y%
b11111 x%
b0 w%
b1 v%
b10 u%
b11 t%
b100 s%
b101 r%
b110 q%
b111 p%
b1000 o%
b1001 n%
b1010 m%
b1011 l%
b1100 k%
b1101 j%
b1110 i%
b1111 h%
b10000 g%
b10001 f%
b10010 e%
b10011 d%
b10100 c%
b10101 b%
b10110 a%
b10111 `%
b11000 _%
b11001 ^%
b11010 ]%
b11011 \%
b11100 [%
b11101 Z%
b11110 Y%
b11111 X%
b100000 o$
b100000 W%
b100000 #
xE
xD
xC
xB
xA
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
x+
x*
x)
x(
x'
x&
xe
xd
xc
xb
xa
x`
x_
x^
x]
x\
x[
xZ
xY
xX
xW
xV
xU
xT
xS
xR
xQ
xP
xO
xN
xM
xL
xK
xJ
xI
xH
xG
xF
xg
xf
x)!
x(!
x'!
x&!
x%!
x$!
x#!
x"!
x!!
x~
x}
x|
x{
xz
xy
xx
xw
xv
xu
xt
xs
xr
xq
xp
xo
xn
xm
xl
xk
xj
xi
xh
xI!
xH!
xG!
xF!
xE!
xD!
xC!
xB!
xA!
x@!
x?!
x>!
x=!
x<!
x;!
x:!
x9!
x8!
x7!
x6!
x5!
x4!
x3!
x2!
x1!
x0!
x/!
x.!
x-!
x,!
x+!
x*!
xi!
xh!
xg!
xf!
xe!
xd!
xc!
xb!
xa!
x`!
x_!
x^!
x]!
x\!
x[!
xZ!
xY!
xX!
xW!
xV!
xU!
xT!
xS!
xR!
xQ!
xP!
xO!
xN!
xM!
xL!
xK!
xJ!
x+"
x*"
x)"
x("
x'"
x&"
x%"
x$"
x#"
x""
x!"
x~!
x}!
x|!
x{!
xz!
0y!
0x!
0w!
0v!
0u!
0t!
0s!
0r!
0q!
0p!
0o!
0n!
0m!
0l!
0k!
0j!
0K"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
x;"
x:"
x9"
x8"
x7"
x6"
x5"
x4"
x3"
x2"
x1"
x0"
x/"
x."
x-"
x,"
xP"
xO"
xN"
xM"
xL"
xU"
xT"
xS"
xR"
xQ"
xW"
xV"
xw"
xv"
xu"
xt"
xs"
xr"
xq"
xp"
xo"
xn"
xm"
xl"
xk"
xj"
xi"
xh"
xg"
xf"
xe"
xd"
xc"
xb"
xa"
x`"
x_"
x^"
x]"
x\"
x["
xZ"
xY"
xX"
x9#
x8#
x7#
x6#
x5#
x4#
x3#
x2#
x1#
x0#
x/#
x.#
x-#
x,#
x+#
x*#
x)#
x(#
x'#
x&#
x%#
x$#
x##
x"#
x!#
x~"
x}"
x|"
x{"
xz"
xy"
xx"
x>#
x=#
x<#
x;#
x:#
x^#
x]#
x\#
x[#
xZ#
xY#
xX#
xW#
xV#
xU#
xT#
xS#
xR#
xQ#
xP#
xO#
xN#
xM#
xL#
xK#
xJ#
xI#
xH#
xG#
xF#
xE#
xD#
xC#
xB#
xA#
x@#
x?#
x_#
x)$
x($
x'$
x&$
x%$
x$$
x#$
x"$
x!$
x~#
x}#
x|#
x{#
xz#
xy#
xx#
xw#
xv#
xu#
xt#
xs#
xr#
xq#
xp#
xo#
xn#
xm#
xl#
xk#
xj#
xi#
xh#
x`#
xa#
xb#
xc#
xd#
xe#
xf#
x*$
x+$
x,$
x-$
x.$
x/$
z0$
x1$
z2$
z3$
x4$
xT$
xS$
xR$
xQ$
xP$
xO$
xN$
xM$
xL$
xK$
xJ$
xI$
xH$
xG$
xF$
xE$
xD$
xC$
xB$
xA$
x@$
x?$
x>$
x=$
x<$
x;$
x:$
x9$
x8$
x7$
x6$
x5$
xY$
xX$
xW$
xV$
xU$
x^$
x]$
x\$
x[$
xZ$
xn$
xm$
xl$
xk$
xj$
xi$
xh$
xg$
xf$
xe$
xd$
xc$
xb$
xa$
x`$
x_$
xq$
x3%
x2%
x1%
x0%
x/%
x.%
x-%
x,%
x+%
x*%
x)%
x(%
x'%
x&%
x%%
x$%
x#%
x"%
x!%
x~$
x}$
x|$
x{$
xz$
xy$
xx$
xw$
xv$
xu$
xt$
xs$
xr$
xS%
xR%
xQ%
xP%
xO%
xN%
xM%
xL%
xK%
xJ%
xI%
xH%
xG%
xF%
xE%
xD%
xC%
xB%
xA%
x@%
x?%
x>%
x=%
x<%
x;%
x:%
x9%
x8%
x7%
x6%
x5%
x4%
zV%
1%
0$
$end
#1
1!
1$
b0 g#
0e
0d
1c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
15
14
03
02
01
00
0/
0.
0-
0,
1+
1*
0)
1(
0'
1&
0Y$
0X$
0W$
0V$
0U$
1^$
1]$
0\$
0[$
0Z$
1U"
1T"
0S"
0R"
0Q"
0P"
0O"
0N"
0M"
0L"
0n$
0m$
0l$
0k$
0j$
0i$
0h$
0g$
0f$
0e$
0d$
0c$
0b$
0a$
0`$
0_$
04$
01$
0/$
0.$
0-$
1,$
0+$
0*$
0`#
0e#
0b#
0a#
1d#
1c#
0f#
0_#
0)$
0($
1'$
0&$
0%$
0$$
0#$
0"$
0!$
0~#
0}#
0|#
0{#
0z#
0y#
0x#
0w#
0v#
0u#
0t#
0s#
0r#
0q#
0p#
0o#
0n#
0m#
0l#
0k#
0j#
0i#
0h#
1>#
1=#
0<#
0;#
0:#
1I!
1H!
0G!
0F!
0E!
0D!
0C!
0B!
0A!
0@!
0?!
0>!
0=!
0<!
0;!
0:!
09!
08!
07!
06!
05!
04!
03!
02!
01!
00!
0/!
0.!
0-!
0,!
0+!
0*!
0)!
0(!
0'!
0&!
0%!
0$!
0#!
0"!
0!!
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
03%
02%
01%
00%
0/%
0.%
0-%
0,%
0+%
0*%
0)%
0(%
0'%
0&%
0%%
0$%
0#%
0"%
0!%
0~$
0}$
0|$
0{$
0z$
0y$
0x$
0w$
0v$
0u$
0t$
0s$
0r$
0g
0f
0W"
0V"
0i!
0h!
0g!
0f!
0e!
0d!
0c!
0b!
0a!
0`!
0_!
0^!
0]!
0\!
0[!
0Z!
0Y!
0X!
0W!
0V!
0U!
0T!
0S!
0R!
0Q!
0P!
0O!
0N!
0M!
0L!
0K!
0J!
0;"
0:"
09"
08"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~!
0}!
0|!
0{!
0z!
09#
08#
17#
06#
05#
04#
03#
02#
01#
00#
0/#
0.#
0-#
0,#
0+#
0*#
0)#
0(#
0'#
0&#
0%#
0$#
0##
0"#
0!#
0~"
0}"
0|"
0{"
0z"
0y"
0x"
b0 U%
b10 T%
0S%
0R%
0Q%
0P%
0O%
0N%
0M%
0L%
0K%
0J%
0I%
0H%
0G%
0F%
0E%
0D%
0C%
0B%
0A%
0@%
0?%
0>%
0=%
0<%
0;%
0:%
09%
08%
07%
06%
05%
04%
b0 p$
1q$
0w"
0v"
0u"
0t"
0s"
0r"
0q"
0p"
0o"
0n"
0m"
0l"
0k"
0j"
0i"
0h"
0g"
0f"
0e"
0d"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0T$
0S$
0R$
0Q$
0P$
0O$
0N$
0M$
0L$
0K$
0J$
0I$
0H$
0G$
0F$
0E$
0D$
0C$
0B$
0A$
0@$
0?$
0>$
0=$
0<$
0;$
0:$
09$
08$
07$
06$
05$
0?#
0@#
0A#
0B#
0C#
0D#
0E#
0F#
0G#
0H#
0I#
0J#
0K#
0L#
0M#
0N#
0O#
0P#
0Q#
0R#
0S#
0T#
0U#
0V#
0W#
0X#
0Y#
0Z#
0[#
0\#
0]#
0^#
#2
0"
0!
0%
0$
#3
1!
1$
b100 g#
0'$
1&$
0c
1b
1]#
1^#
07#
16#
05
04
13
0(
0^$
0]$
1\$
0U"
0T"
1S"
0,$
1+$
1b#
1e#
1a#
0c#
1T$
1S$
0>#
0=#
1<#
0I!
0H!
1G!
#4
0!
0$
#5
1!
1$
b1000 g#
1I!
1H!
0G!
1'$
1c
17#
1@
1:
18
15
14
03
1.
0+
0*
0&
1W$
1^$
1]$
0\$
1U"
1T"
0S"
1P"
1N"
1i$
1c$
1a$
0+$
1*$
1`#
0d#
0b#
0a#
0T$
0S$
1>#
1)!
1(!
13%
12%
1S%
1R%
1f
1d!
1^!
1\!
16"
10"
1."
1&"
1~!
1|!
12#
1,#
1*#
b10100000100000 U%
b110 p$
0q$
1v"
1u"
1S$
1R$
0]#
0^#
#6
0!
0$
#7
1!
1$
b1100 g#
0'$
0&$
1%$
0c
0b
1a
07#
06#
15#
0@
0:
19
17
05
13
1/
1+
1*
1)
1(
1X$
0^$
1\$
0U"
1S"
0P"
1O"
1M"
0i$
0c$
1b$
1`$
14$
0*$
0`#
1d#
0>#
1=#
0I!
1G!
0)!
1'!
03%
11%
0S%
0R%
1N%
1H%
1F%
0f
1V"
0d!
0^!
1]!
1[!
06"
00"
1/"
1-"
0&"
0~!
1}!
1{!
02#
0,#
1+#
1)#
02%
01%
b1110000000000000000000000000000 U%
b10100000100000 p$
0v"
0u"
1r"
1l"
1j"
0S$
0R$
1O$
1I$
1G$
0N%
0H%
0F%
17%
16%
15%
b1110000000000000000000000000000 p$
0r"
0l"
0j"
1["
1Z"
1Y"
1]#
1^#
0O$
0I$
0G$
18$
17$
16$
#8
0!
0$
#9
1!
1$
b10000 g#
0(!
0'!
1k
1j
1i
0H!
0G!
1-!
1,!
1+!
1'$
1c
17#
1E
1D
1C
1A
1@
1?
1=
1<
1;
15
0*
1^$
1U"
1n$
1m$
1l$
1j$
1i$
1h$
1f$
1e$
1d$
04$
11$
1>#
1I!
1H!
1G!
0-!
0,!
0+!
1W"
0V"
1i!
1h!
1g!
1e!
1d!
1c!
1a!
1`!
1_!
1;"
1:"
19"
17"
16"
15"
13"
12"
11"
1+"
1*"
1)"
1'"
1&"
1%"
1#"
1""
1!"
07#
14#
13#
12#
11#
1/#
1.#
1-#
1u$
1t$
1s$
b11100000000000000000000000000000 p$
b111011101110111 U%
0["
1X"
08$
15$
1S%
1R%
1Q%
1O%
1N%
1M%
1K%
1J%
1I%
1G%
1F%
1E%
07%
06%
05%
b1110000000000000111011101110111 p$
1w"
1v"
1u"
1s"
1r"
1q"
1o"
1n"
1m"
1k"
1j"
1i"
1["
0X"
1T$
1S$
1R$
1P$
1O$
1N$
1L$
1K$
1J$
1H$
1G$
1F$
18$
05$
0]#
0^#
#10
0!
0$
#11
1!
1$
b10100 g#
1E!
1D!
1C!
1A!
1@!
1?!
1=!
1<!
1;!
1-!
1,!
1+!
0'$
1&$
0c
1b
17#
0E
0C
1B
0A
0?
0=
0<
0;
09
07
05
04
03
10
0/
0+
0)
0(
1Y$
0X$
0^$
0]$
0\$
0U"
0T"
0S"
0O"
0M"
0n$
0l$
1k$
0j$
0h$
0f$
0e$
0d$
0b$
0`$
01$
1*$
1`#
0d#
0>#
0=#
0I!
0H!
0G!
0E!
0D!
0C!
0A!
0@!
0?!
0=!
0<!
0;!
0-!
0,!
0+!
1(!
1'!
0k
0j
0i
12%
11%
0u$
0t$
0s$
0S%
0R%
0Q%
0O%
0N%
0M%
0K%
0J%
0I%
0G%
0F%
0E%
1f
0W"
0i!
0g!
1f!
0e!
0c!
0a!
0`!
0_!
0]!
0[!
0;"
09"
18"
07"
05"
03"
02"
01"
0/"
0-"
0+"
0)"
1("
0'"
0%"
0#"
0""
0!"
0}!
0{!
07#
05#
04#
01#
0/#
0.#
0-#
0+#
0)#
b10000000101010 U%
b110 p$
b111 T%
0w"
0s"
0r"
0q"
0o"
0n"
0m"
0k"
0j"
0i"
0["
0Z"
0Y"
0T$
0P$
0O$
0N$
0L$
0K$
0J$
0H$
0G$
0F$
08$
07$
06$
b0 p$
1q$
0v"
0u"
0S$
0R$
1]#
1^#
#12
0!
0$
#13
1!
1$
b11000 g#
1'$
1c
17#
1E
0D
1A
1?
1>
1=
1<
1;
1:
19
17
16
15
1)
1^$
1U"
1P"
1O"
1M"
1L"
1n$
0m$
1j$
1h$
1g$
1f$
1e$
1d$
1c$
1b$
1`$
1_$
1-$
0*$
0`#
0e#
1f#
1_#
0&$
0%$
1#$
1"$
1x#
1>#
0<#
1I!
1S%
1g
0f
1i!
0h!
1e!
1c!
1b!
1a!
1`!
1_!
1^!
1]!
1[!
1Z!
1Y!
1X!
1W!
1V!
1U!
1T!
1S!
1R!
1Q!
1P!
1O!
1N!
1M!
1L!
1K!
1J!
1;"
0:"
17"
15"
14"
13"
12"
11"
10"
1/"
1-"
1,"
1+"
0*"
1'"
1%"
1$"
1#"
1""
1!"
1~!
1}!
1{!
1z!
07#
03#
02#
0*#
0'$
0#$
0"$
0x#
b11111111111111111111111111111001 U%
b110 T%
b101 p$
0q$
1w"
1u"
0_#
0]#
0^#
1'$
1&$
1%$
1T$
1R$
#14
0!
0$
#15
1!
1$
b11100 g#
0'$
0&$
0%$
1$$
0c
0b
0a
1`
17#
0E
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
00
0.
0)
0Y$
0W$
0^$
0U"
0P"
0O"
0N"
0M"
0L"
0n$
0k$
0j$
0i$
0h$
0g$
0f$
0e$
0d$
0c$
0b$
0a$
0`$
0_$
0-$
1*$
1`#
1e#
0f#
0>#
0I!
0(!
0'!
02%
01%
0S%
0g
1f
0i!
0f!
0e!
0d!
0c!
0b!
0a!
0`!
0_!
0^!
0]!
0\!
0[!
0Z!
0Y!
0X!
0W!
0V!
0U!
0T!
0S!
0R!
0Q!
0P!
0O!
0N!
0M!
0L!
0K!
0J!
0;"
08"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
0."
0-"
0,"
0+"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~!
0}!
0|!
0{!
0z!
07#
14#
b0 U%
b0 p$
1q$
0w"
0u"
0T$
0R$
1]#
1^#
#16
0!
0$
#17
1!
1$
b100000 g#
1'$
1c
17#
15
14
1+
1*
1(
1&
1^$
1]$
1U"
1T"
1,$
0*$
0`#
0e#
1d#
1c#
1>#
1=#
1I!
1H!
0f
b10 T%
#18
0!
0$
#19
1!
1$
b100100 g#
0'$
1&$
0c
1b
07#
16#
05
04
13
0(
0^$
0]$
1\$
0U"
0T"
1S"
0,$
1+$
1b#
1e#
1a#
0c#
1T$
1S$
0>#
0=#
1<#
0I!
0H!
#20
0!
0$
#21
1!
1$
b101000 g#
1I!
1H!
1'$
1c
17#
1@
1:
18
15
14
03
1.
0+
0*
0&
1W$
1^$
1]$
0\$
1U"
1T"
0S"
1P"
1N"
1i$
1c$
1a$
0+$
1*$
1`#
0d#
0b#
0a#
0T$
0S$
1>#
1)!
1(!
13%
12%
1S%
1R%
1f
1d!
1^!
1\!
16"
10"
1."
1&"
1~!
1|!
12#
1,#
1*#
b10100000100000 U%
b110 p$
0q$
1v"
1u"
1S$
1R$
0]#
0^#
#22
0!
0$
#23
1!
1$
b101100 g#
0'$
0&$
1%$
0c
0b
1a
07#
06#
15#
0@
0:
19
17
05
13
1/
1+
1*
1)
1(
1X$
0^$
1\$
0U"
1S"
0P"
1O"
1M"
0i$
0c$
1b$
1`$
14$
0*$
0`#
1d#
0>#
1=#
0I!
0H!
1-!
1,!
1+!
0)!
0(!
1k
1j
1i
03%
02%
1u$
1t$
1s$
0S%
0R%
1N%
1H%
1F%
0f
1V"
0d!
0^!
1]!
1[!
06"
00"
1/"
1-"
0&"
0~!
1}!
1{!
02#
0,#
1+#
1)#
0u$
0t$
0s$
b1110000000000000000000000000000 U%
b10100000100000 p$
0v"
0u"
1r"
1l"
1j"
0S$
0R$
1O$
1I$
1G$
0N%
0H%
0F%
17%
16%
15%
b1110000000000000000000000000000 p$
0r"
0l"
0j"
1["
1Z"
1Y"
1]#
1^#
0O$
0I$
0G$
18$
17$
16$
#24
0!
0$
#25
1!
1$
b110000 g#
1'$
1c
17#
1E
1D
1C
1A
1@
1?
1=
1<
1;
15
0*
1^$
1U"
1n$
1m$
1l$
1j$
1i$
1h$
1f$
1e$
1d$
04$
11$
1>#
1I!
1H!
1G!
1E!
1D!
1C!
1A!
1@!
1?!
1=!
1<!
1;!
1W"
0V"
1i!
1h!
1g!
1e!
1d!
1c!
1a!
1`!
1_!
1;"
1:"
19"
17"
16"
15"
13"
12"
11"
1+"
1*"
1)"
1'"
1&"
1%"
1#"
1""
1!"
07#
04#
10#
1/#
1.#
1-#
1u$
1t$
1s$
b11100000000000000000000000000000 p$
b111011101110111 U%
0["
1X"
08$
15$
1S%
1R%
1Q%
1O%
1N%
1M%
1K%
1J%
1I%
1G%
1F%
1E%
07%
06%
05%
b1110000000000000111011101110111 p$
1w"
1v"
1u"
1s"
1r"
1q"
1o"
1n"
1m"
1k"
1j"
1i"
1["
0X"
1T$
1S$
1R$
1P$
1O$
1N$
1L$
1K$
1J$
1H$
1G$
1F$
18$
05$
0]#
0^#
#26
0!
0$
#27
1!
1$
b110100 g#
0'$
1&$
0c
1b
17#
0E
0C
1B
0A
0?
0=
0<
0;
09
07
05
04
03
10
0/
0+
0)
0(
1Y$
0X$
0^$
0]$
0\$
0U"
0T"
0S"
0O"
0M"
0n$
0l$
1k$
0j$
0h$
0f$
0e$
0d$
0b$
0`$
01$
1*$
1`#
0d#
0>#
0=#
0I!
0H!
0G!
0E!
0D!
0C!
0A!
0@!
0?!
0=!
0<!
0;!
0-!
0,!
0+!
1(!
1'!
0k
0j
0i
12%
11%
0u$
0t$
0s$
0S%
0R%
0Q%
0O%
0N%
0M%
0K%
0J%
0I%
0G%
0F%
0E%
1f
0W"
0i!
0g!
1f!
0e!
0c!
0a!
0`!
0_!
0]!
0[!
0;"
09"
18"
07"
05"
03"
02"
01"
0/"
0-"
0+"
0)"
1("
0'"
0%"
0#"
0""
0!"
0}!
0{!
07#
05#
14#
13#
12#
00#
0/#
0.#
0-#
0+#
0)#
b10000000101010 U%
b110 p$
b111 T%
0w"
0s"
0r"
0q"
0o"
0n"
0m"
0k"
0j"
0i"
0["
0Z"
0Y"
0T$
0P$
0O$
0N$
0L$
0K$
0J$
0H$
0G$
0F$
08$
07$
06$
b0 p$
1q$
0v"
0u"
0S$
0R$
1]#
1^#
#28
0!
0$
#29
1!
1$
b111000 g#
1'$
1c
17#
1E
0D
1A
1?
1>
1=
1<
1;
1:
19
17
16
15
1)
1^$
1U"
1P"
1O"
1M"
1L"
1n$
0m$
1j$
1h$
1g$
1f$
1e$
1d$
1c$
1b$
1`$
1_$
1-$
0*$
0`#
0e#
1f#
1_#
0&$
0%$
1#$
1"$
1x#
1>#
0<#
1I!
1S%
1g
0f
1i!
0h!
1e!
1c!
1b!
1a!
1`!
1_!
1^!
1]!
1[!
1Z!
1Y!
1X!
1W!
1V!
1U!
1T!
1S!
1R!
1Q!
1P!
1O!
1N!
1M!
1L!
1K!
1J!
1;"
0:"
17"
15"
14"
13"
12"
11"
10"
1/"
1-"
1,"
1+"
0*"
1'"
1%"
1$"
1#"
1""
1!"
1~!
1}!
1{!
1z!
07#
03#
02#
0*#
0'$
0#$
0"$
0x#
b11111111111111111111111111111001 U%
b110 T%
b101 p$
0q$
1w"
1u"
0_#
0]#
0^#
1'$
1&$
1%$
1T$
1R$
#30
0!
0$
#31
1!
1$
b111100 g#
0'$
0&$
0%$
0$$
1#$
0c
0b
0a
0`
1_
17#
0E
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
00
0.
0)
0Y$
0W$
0^$
0U"
0P"
0O"
0N"
0M"
0L"
0n$
0k$
0j$
0i$
0h$
0g$
0f$
0e$
0d$
0c$
0b$
0a$
0`$
0_$
0-$
1*$
1`#
1e#
0f#
0>#
0I!
0(!
0'!
02%
01%
0S%
0g
1f
0i!
0f!
0e!
0d!
0c!
0b!
0a!
0`!
0_!
0^!
0]!
0\!
0[!
0Z!
0Y!
0X!
0W!
0V!
0U!
0T!
0S!
0R!
0Q!
0P!
0O!
0N!
0M!
0L!
0K!
0J!
0;"
08"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
0."
0-"
0,"
0+"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~!
0}!
0|!
0{!
0z!
07#
04#
13#
b0 U%
b0 p$
1q$
0w"
0u"
0T$
0R$
1]#
1^#
#32
0!
0$
#33
1!
1$
b1000000 g#
1'$
1c
17#
15
14
1+
1*
1(
1&
1^$
1]$
1U"
1T"
1,$
0*$
0`#
0e#
1d#
1c#
1>#
1=#
1I!
1H!
0f
b10 T%
#34
0!
0$
#35
1!
1$
b1000100 g#
0'$
1&$
0c
1b
07#
16#
05
04
13
0(
0^$
0]$
1\$
0U"
0T"
1S"
0,$
1+$
1b#
1e#
1a#
0c#
1T$
1S$
0>#
0=#